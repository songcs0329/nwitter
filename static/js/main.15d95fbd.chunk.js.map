{"version":3,"sources":["fBase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","password","setAuth","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","alt","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onload","finished","result","currentTarget","readAsDataURL","opacity","fontSize","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetsArray","docs","map","Navigation","to","faUser","displayName","Profile","setUserObj","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","marginTop","signOut","push","Router","isLoggedIn","exact","path","App","init","setInit","onAuthStateChanged","user","args","Boolean","currentUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.15d95fbd.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\"\r\nimport \"firebase/storage\"\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from 'react';\r\nimport { authService } from 'fBase';\r\n\r\nconst AuthForm = () => {\r\n  const [auth, setAuth] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  })\r\n  const [newAccount, setNewAccount] = useState(true)\r\n  const [error, setError] = useState(\"\")\r\n\r\n  const onChange = (event) => {\r\n    const {target: {name, value}} = event\r\n    setAuth({\r\n      ...auth,\r\n      [name]: value\r\n    })\r\n  }\r\n  \r\n  const onSubmit = async (event) => {\r\n    event.preventDefault()\r\n    const {email, password} = auth\r\n    try {\r\n      let data;\r\n      if(newAccount) data = await authService.createUserWithEmailAndPassword(email, password)\r\n      else data = await authService.signInWithEmailAndPassword(email, password)\r\n      console.log(data)\r\n    } catch(error) {\r\n      setError(error.message)\r\n    }\r\n  }\r\n\r\n  const toggleAccount = () => setNewAccount(prev => !prev)\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={auth.email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={auth.password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;","import React from 'react';\r\nimport AuthForm from 'components/AuthForm';\r\nimport { authService, firebaseInstance } from 'fBase';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub, faGoogle, faTwitter } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {target: {name}} = event\r\n    let provider;\r\n\r\n    switch(name) {\r\n      case \"google\":\r\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        break\r\n      case \"github\":\r\n        provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        break\r\n      default:\r\n        return\r\n    }\r\n\r\n    await authService.signInWithPopup(provider)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;","import { faPencilAlt, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { dbService, storageService } from 'fBase';\r\nimport React, { useState } from 'react';\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false)\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text)\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want delete this nweet?\")\r\n    if(ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete()\r\n      if(nweetObj.attachmentUrl !== \"\") await storageService.refFromURL(nweetObj.attachmentUrl).delete()\r\n    }\r\n  }\r\n  const toggleEditing = () => setEditing(prev => !prev)\r\n  const onChange = (event) => setNewNweet(event.target.value)\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault()\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet\r\n    })\r\n    setEditing(false)\r\n  }\r\n  return (\r\n    <div className=\"nweet\">\r\n      {\r\n        editing\r\n        ?\r\n        (\r\n          <>\r\n            <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Edit your nweet\"\r\n                className=\"formInput\"\r\n                autoFocus\r\n                value={newNweet}\r\n                onChange={onChange}\r\n                required \r\n              />\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Update Nweet\"\r\n                className=\"formBtn\"\r\n              />\r\n            </form>\r\n            <span onClick={toggleEditing} className=\"formBtn cancelBtn\">Cancel</span>\r\n          </>\r\n        )\r\n        :\r\n        (\r\n          <>\r\n            <h4>{nweetObj.text}</h4>\r\n            {\r\n              nweetObj.attachmentUrl\r\n              &&\r\n              <span><img src={nweetObj.attachmentUrl} alt=\"\" /></span>\r\n            }\r\n            {\r\n              isOwner\r\n              &&\r\n              (\r\n                <div className=\"nweet__actions\">\r\n                  <span onClick={onDeleteClick}>\r\n                    <FontAwesomeIcon icon={faTrash} />\r\n                  </span>\r\n                  <span onClick={toggleEditing}>\r\n                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                  </span>\r\n                </div>\r\n              )\r\n            }\r\n          </>\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;","import React, { useState } from 'react';\r\nimport { dbService, storageService } from 'fBase';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\")\r\n  const [attachment, setAttachment] = useState(\"\")\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault()\r\n    if(nweet === \"\") return\r\n    let attachmentUrl = \"\";\r\n    if(attachment !== \"\") {\r\n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`)\r\n      const response = await attachmentRef.putString(attachment, \"data_url\")\r\n      attachmentUrl = await response.ref.getDownloadURL()\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl\r\n    }\r\n    await dbService.collection(\"nweets\").add(nweetObj)\r\n    setNweet(\"\")\r\n    setAttachment(\"\")\r\n  }\r\n  const onChange = (event) => setNweet(event.target.value)\r\n  const onFileChange = (event) => {\r\n    const {target: { files }} = event\r\n    const theFile = files[0]\r\n    const reader = new FileReader()\r\n    reader.onload = (finished) => {\r\n      const { currentTarget : { result } } = finished\r\n      setAttachment(result)\r\n    }\r\n    reader.readAsDataURL(theFile)\r\n  }\r\n  const onClearAttachment = () => setAttachment(\"\")\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n          fontSize: 0\r\n        }}\r\n      />\r\n      { \r\n        attachment && \r\n        (\r\n          <div className=\"factoryForm__attachment\">\r\n            <img\r\n              src={attachment}\r\n              alt=\"\"\r\n              style={{\r\n                backgroundImage: attachment,\r\n              }}\r\n            />\r\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n              <span>Remove</span>\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;","import Nweet from 'components/Nweet';\r\nimport NweetFactory from 'components/NweetFactory';\r\nimport { dbService } from 'fBase';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst Home = ({userObj}) => {\r\n  const [nweets, setNweets] = useState([])\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n      const nweetsArray = snapshot.docs.map(doc => {\r\n        return {\r\n          id: doc.id,\r\n          ...doc.data()\r\n        }\r\n      })\r\n      setNweets(nweetsArray)\r\n    })\r\n  }, [])\r\n  \r\n  return (\r\n    <div>\r\n      <NweetFactory userObj={userObj}/>\r\n      <div>\r\n        {nweets.map(nweet => \r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\r\nimport { faUser } from '@fortawesome/free-regular-svg-icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul className=\"nav_list\">\r\n        <li>\r\n          <Link to=\"/\">\r\n            <FontAwesomeIcon icon={faTwitter} size=\"2x\"/>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/profile\">\r\n            <FontAwesomeIcon icon={faUser} size=\"2x\" />\r\n            <span>\r\n              {\r\n                userObj.displayName\r\n                ?\r\n                `${userObj.displayName}의 Profile`\r\n                :\r\n                \"Profile\"\r\n              }\r\n            </span>\r\n          </Link>\r\n          </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;","import { authService } from 'fBase';\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Profile = ({ userObj, setUserObj, refreshUser }) => {\r\n  const history = useHistory()\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName !== null ? userObj.displayName : \"\")\r\n  const onLogOutClick = () => {\r\n    authService.signOut()\r\n    setUserObj(null)\r\n    history.push(\"/\")\r\n  }\r\n\r\n  const onChange = (event) => {\r\n    const { target: {value} } = event\r\n    setNewDisplayName(value)\r\n  }\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault()\r\n    if(userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName\r\n      })\r\n      refreshUser()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"display name\"\r\n          autoFocus\r\n          value={newDisplayName}\r\n          onChange={onChange}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport {\r\n  HashRouter,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst Router = ({ isLoggedIn, userObj, setUserObj, refreshUser }) => {\r\n\r\n  return (\r\n    <HashRouter>\r\n      { isLoggedIn && <Navigation userObj={userObj} /> }\r\n      <Switch>\r\n        <>\r\n          {\r\n            isLoggedIn ?\r\n            (\r\n              <div className=\"router_wrap\">\r\n                <Route exact path=\"/\">\r\n                  <Home userObj={userObj} />\r\n                </Route>\r\n                <Route exact path=\"/profile\">\r\n                  <Profile\r\n                    userObj={userObj}\r\n                    setUserObj={setUserObj}\r\n                    refreshUser={refreshUser}\r\n                  />\r\n                </Route>\r\n              </div>\r\n            )\r\n            :\r\n            (\r\n              <>\r\n                <Route exact path=\"/\">\r\n                  <Auth/>\r\n                </Route>\r\n              </>\r\n            )\r\n          }\r\n        </>\r\n      </Switch>\r\n    </HashRouter>\r\n  )\r\n};\r\n\r\nexport default Router;","import { useEffect, useState } from \"react\";\nimport Router from \"components/Router\";\nimport { authService } from \"fBase\"\n\n\nfunction App() {\n  const [init, setInit] = useState(false)\n  const [userObj, setUserObj] = useState(null)\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        })\n      }\n      setInit(true)\n    })\n  }, [])\n\n  const refreshUser = () => {\n    const user = authService.currentUser\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    })\n  }\n  \n  return (\n    <>\n      {\n        init\n        ?\n        <Router isLoggedIn={Boolean(userObj)} userObj={userObj} setUserObj={setUserObj} refreshUser={refreshUser} />\n        :\n        \"Initializing...\"\n      }\n      {/* <footer>&copy; {new Date().getFullYear()} Nwitter</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './style.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}